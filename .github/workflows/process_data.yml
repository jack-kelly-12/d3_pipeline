name: NCAA Baseball Data Processing

on:
  workflow_run:
    workflows: ["NCAA Baseball Data Collection"]
    types:
      - completed
  workflow_dispatch:

jobs:
  process-data:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    env:
      GITHUB_PAT: ${{ secrets.PAT }}
      R_LIBS_USER: ${{ github.workspace }}/R/library
      DATA_DIR: data
      SCHEDULES_DIR: data/schedules
      PBP_DIR: data/play_by_play
      STATS_DIR: data/stats

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "release"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libcurl4-openssl-dev \
            libxml2-dev \
            libssl-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ github.job }}-${{ hashFiles('.github/workflows/*.yaml') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ github.job }}-
            ${{ runner.os }}-r-

      - name: Install R dependencies
        run: |
          install.packages("remotes")
          remotes::install_cran(c(
            "dplyr",
            "purrr",
            "tidyverse",
            "stringr",
            "parallel",
            "devtools"
          ), dependencies = TRUE)
          remotes::install_github(repo = "robert-frey/collegebaseball")
        shell: Rscript {0}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy fuzzywuzzy python-Levenshtein tqdm

      - name: Add ids
        shell: bash
        run: |
          python processors/add_player_id.py --data_dir ${{ env.DATA_DIR }}

      - name: Parse pbp data
        run: |
          root_dir <- getwd()
          setwd(root_dir)
          source("processors/parse_pbp.R")
          main(working_dir = root_dir, data_dir = file.path(root_dir, '${{ env.PBP_DIR }}'), year = 2025)
        shell: Rscript {0}

      - name: Get expected runs matrix
        shell: bash
        run: |
          python processors/get_er_matrix.py --data_dir ${{ env.DATA_DIR }} --year 2025

      - name: Get linear weights
        run: |
          root_dir <- getwd()
          setwd(root_dir)
          source("processors/get_linear_weights.R")
          main(data_dir = file.path(root_dir, '${{ env.DATA_DIR }}'), year = 2025)
        shell: Rscript {0}

      - name: New parsed pbp with leverage, win exp
        shell: bash
        run: |
          python processors/add_pbp_metrics.py --data_dir ${{ env.DATA_DIR }} --year 2025

      - name: Guts constants
        shell: bash
        run: |
          python processors/get_guts.py --data_dir ${{ env.DATA_DIR }} --year 2025

      - name: Generate leaderboards
        shell: bash
        run: |
          python processors/get_leaderboards.py --data_dir ${{ env.DATA_DIR }} --year 2025

      - name: Calculate WAR
        shell: bash
        run: |
          python processors/add_war.py --data_dir ${{ env.DATA_DIR }} --year 2025

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add data/
          git commit -m "Update processed baseball data" || echo "No changes to commit"
          git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
